{"version":3,"sources":["webpack:///src/app/admin/admin-routing.module.ts","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/admin/components/admin/admin.component.ts","webpack:///src/app/admin/components/admin/admin.component.html","webpack:///src/app/admin/components/admin/index.ts","webpack:///src/app/admin/components/config/config.component.ts","webpack:///src/app/admin/components/config/config.component.html","webpack:///src/app/admin/components/config/index.ts","webpack:///src/app/admin/components/index.ts","webpack:///src/app/admin/components/staff/index.ts","webpack:///src/app/admin/components/staff/staff.component.ts","webpack:///src/app/admin/components/staff/staff.component.html","webpack:///src/app/admin/components/ticket-columns/index.ts","webpack:///src/app/admin/components/ticket-columns/ticket-columns.component.ts","webpack:///src/app/admin/components/ticket-columns/ticket-columns.component.html","webpack:///src/app/admin/components/ticket-form/index.ts","webpack:///src/app/admin/components/ticket-form/ticket-form.component.ts","webpack:///src/app/admin/components/ticket-form/ticket-form.component.html","webpack:///src/app/admin/components/tickets/index.ts","webpack:///src/app/admin/components/tickets/tickets.component.ts","webpack:///src/app/admin/components/tickets/tickets.component.html"],"names":["routes","path","component","children","AdminRoutingModule","forChild","imports","exports","AdminModule","declarations","providers","AdminComponent","adminData","loader","ngUnsubscribe","showLoading","next","complete","subject","pipe","subscribe","resp","setTimeout","showSpinner","selector","templateUrl","styleUrls","ConfigComponent","StaffComponent","staffService","loaderSvc","toaster","pageSize","getUsers","getAllUsers","users","error","err","id","deleteUser","info","console","log","TicketColumnsComponent","builder","selectedItemIndex","formInit","getColumns","unsubscribe","columNameForm","group","addNewColumn","required","getConfigs","columns","map","col","name","label","event","length","currentIndex","previousIndex","resetControl","get","reset","displayModal","index","setValue","showModalDialog","splice","updateConfig","column","currentValue","value","changeWhitespace","unshift","closeModal","str","replace","drop","confirm","save","TicketFormComponent","bulider","getTickets","ticketTypeOptions","tickets","getTicket","ticket","dropdownItems","type","ticketForm","updateTicket","ticketType","ticketName","item","push","itemIndex","dropDownItems","removeAt","createItem","control","array","valueChanges","addItem","Submit","addToList","TicketsComponent"],"mappings":"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","file":"admin-admin-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { UserAccountComponent } from '../shared/components';\r\nimport { AdminComponent, StaffComponent, TicketsComponent, ConfigComponent } from './components';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: AdminComponent,\r\n    children: [\r\n      { path: 'staff', component: StaffComponent },\r\n      { path: 'tickets', component: TicketsComponent },\r\n      { path: 'config', component: ConfigComponent },\r\n      { path: 'account', component: UserAccountComponent }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AdminRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\n\r\nimport { AdminComponent } from './components/admin/admin.component';\r\nimport { AdminDataService, LoaderService, StaffService } from './services';\r\nimport { StaffComponent, TicketsComponent, ConfigComponent, TicketColumnsComponent, TicketFormComponent } from './components';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdminComponent,\r\n    StaffComponent,\r\n    TicketsComponent,\r\n    ConfigComponent,\r\n    TicketColumnsComponent,\r\n    TicketFormComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdminRoutingModule,\r\n    SharedModule\r\n  ],\r\n  providers: [\r\n    AdminDataService,\r\n    StaffService,\r\n    LoaderService\r\n  ],\r\n})\r\nexport class AdminModule { }\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { AdminDataService, LoaderService } from '../../services';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\n\r\nexport class AdminComponent implements OnInit, OnDestroy {\r\n\r\n  public showSpinner: boolean;\r\n  private ngUnsubscribe = new Subject();\r\n\r\n  constructor(\r\n    private adminData: AdminDataService,\r\n    private loader: LoaderService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.showLoading();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.ngUnsubscribe.next();\r\n    this.ngUnsubscribe.complete();\r\n  }\r\n\r\n  public showLoading() {\r\n    this.loader.subject\r\n      .pipe(\r\n        takeUntil(this.ngUnsubscribe)\r\n      )\r\n      .subscribe(\r\n        resp => {\r\n          setTimeout(() => {\r\n            this.showSpinner = resp;\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row main\">\r\n    <div class=\"col-xl-2 col-lg-3 col-md-4 col-sm-5 sidebar\">\r\n      <app-sidebar></app-sidebar>\r\n    </div>\r\n    <div class=\"col-xl-10 col-lg-9 col-md-8 col-sm-7 header\">\r\n      <div class=\"row\">\r\n        <app-navbar class=\"nav\"></app-navbar>\r\n      </div>\r\n      <div class=\"row content\">\r\n        <div class=\"forLoader\" *ngIf=\"showSpinner\">\r\n          <div class=\"loader\"></div>\r\n        </div>\r\n        <div class=\"inner\" [hidden]=\"showSpinner\">\r\n          <router-outlet></router-outlet>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","export * from './admin.component';\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-config',\r\n  templateUrl: './config.component.html',\r\n  styleUrls: ['./config.component.scss']\r\n})\r\nexport class ConfigComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"config\">\r\n    <p-tabView>\r\n        <p-tabPanel header=\"Ticket Form\" rightIcon=\"pi pi-ticket\">\r\n            <app-ticket-form></app-ticket-form>\r\n        </p-tabPanel>\r\n        <p-tabPanel header=\"Ticket Columns\" rightIcon=\"pi pi-envelope\">\r\n            <app-ticket-columns></app-ticket-columns>\r\n        </p-tabPanel>\r\n    </p-tabView>\r\n</div>","export * from './config.component';\r\n","export * from './admin';\r\nexport * from './staff';\r\nexport * from './tickets';\r\nexport * from './config';\r\nexport * from './ticket-columns';\r\nexport * from './ticket-form';\r\n","export * from './staff.component';\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { IUser } from '../../../core/infrastructure/interfaces';\r\nimport { LoaderService, StaffService } from '../../services';\r\n\r\n@Component({\r\n  selector: 'app-staff',\r\n  templateUrl: './staff.component.html',\r\n  styleUrls: ['./staff.component.scss']\r\n})\r\nexport class StaffComponent implements OnInit, OnDestroy {\r\n\r\n  public users: IUser[];\r\n  public pageSize = 10;\r\n  private ngUnsubscribe = new Subject();\r\n\r\n  constructor(\r\n    private staffService: StaffService,\r\n    private loaderSvc: LoaderService,\r\n    private toaster: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getUsers();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.ngUnsubscribe.next();\r\n    this.ngUnsubscribe.complete();\r\n  }\r\n\r\n  public getUsers() {\r\n    this.loaderSvc.subject.next(true);\r\n    this.staffService.getAllUsers(1, this.pageSize)\r\n      .pipe(\r\n        takeUntil(this.ngUnsubscribe)\r\n      )\r\n      .subscribe({\r\n        next: resp => {\r\n          this.loaderSvc.subject.next(false);\r\n          this.users = resp;\r\n        },\r\n        error: err => {\r\n          this.loaderSvc.subject.next(false);\r\n        }\r\n      });\r\n  }\r\n\r\n  public deleteUser(id: string) {\r\n    this.staffService.deleteUser(id)\r\n      .pipe(\r\n        takeUntil(this.ngUnsubscribe)\r\n      )\r\n      .subscribe({\r\n        next: resp => {\r\n          this.toaster.info(resp);\r\n          this.getUsers();\r\n        },\r\n        error: err => {\r\n          console.log(err);\r\n          this.toaster.info('error');\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"content\">\r\n  <div class=\"pageName\">\r\n    <h3>Staff</h3>\r\n    <button pButton type=\"button\" label=\"Add Admin\" class=\"ui-button-success\"></button>\r\n  </div>\r\n  <table class=\"table table-striped\">\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">ID</th>\r\n        <th scope=\"col\">FirstName</th>\r\n        <th scope=\"col\">LastName</th>\r\n        <th scope=\"col\">Email</th>\r\n        <th scope=\"col\">Role</th>\r\n        <th scope=\"col\">Actions</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody class=\"tbody\">\r\n      <tr *ngFor=\"let user of users; index as i\">\r\n        <th scope=\"row\">{{user.id}}</th>\r\n        <td>{{ user.firstName }}</td>\r\n        <td>{{ user.lastName }}</td>\r\n        <td>{{ user.email }}</td>\r\n        <td>{{ user.role }}</td>\r\n        <td class=\"forButton\">\r\n          <button (click)=\"deleteUser(user.id)\" pButton pRipple type=\"button\" label=\"Delete\"\r\n            class=\"text-start ui-button-info delete\"></button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <div>\r\n    <!-- <p-paginator [rows]=\"pageSize\" [totalRecords]=\"100\" [rowsPerPageOptions]=\"[5,10,20]\" pageLinkSize=\"3\"></p-paginator> -->\r\n  </div>\r\n</div>","export * from './ticket-columns.component';\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { AdminDataService, LoaderService } from '../../services';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { IColumn } from 'src/app/core/infrastructure/interfaces';\r\n\r\n\r\n@Component({\r\n  selector: 'app-ticket-columns',\r\n  templateUrl: './ticket-columns.component.html',\r\n  styleUrls: ['./ticket-columns.component.scss']\r\n})\r\nexport class TicketColumnsComponent implements OnInit, OnDestroy {\r\n\r\n  public displayModal: boolean;\r\n  public columns: IColumn[];\r\n  public columNameForm: FormGroup;\r\n  public selectedItemIndex: number = null;\r\n  private ngUnsubscribe = new Subject();\r\n\r\n  constructor(\r\n    private builder: FormBuilder,\r\n    private adminData: AdminDataService,\r\n    private loaderSvc: LoaderService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formInit();\r\n    this.getColumns();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.ngUnsubscribe.next();\r\n    this.ngUnsubscribe.unsubscribe();\r\n  }\r\n\r\n  public formInit() {\r\n    this.columNameForm = this.builder.group({\r\n      addNewColumn: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  public getColumns() {\r\n    this.loaderSvc.subject.next(true);\r\n    this.adminData.getConfigs()\r\n      .pipe(\r\n        takeUntil(this.ngUnsubscribe)\r\n      )\r\n      .subscribe({\r\n        next: resp => {\r\n          this.loaderSvc.subject.next(false);\r\n          this.columns = resp.map(\r\n            col => col = {\r\n              name: col.name,\r\n              label: col.label,\r\n              default: col.default,\r\n            },\r\n          );\r\n        },\r\n        error: err => {\r\n          this.loaderSvc.subject.next(false);\r\n          console.log(err);\r\n        }\r\n      });\r\n  }\r\n\r\n  public drop(event: CdkDragDrop<string[]>) {\r\n    if (this.columns.length - 1 !== event.currentIndex){\r\n      moveItemInArray(this.columns, event.previousIndex, event.currentIndex);\r\n    }\r\n  }\r\n\r\n  public showModalDialog(resetControl) {\r\n    if (resetControl) {\r\n      this.columNameForm.get('addNewColumn').reset();\r\n    }\r\n    this.displayModal = true;\r\n  }\r\n\r\n  public edit(index: number) {\r\n    this.selectedItemIndex = index;\r\n    this.columNameForm.get('addNewColumn').setValue(this.columns[index].label);\r\n    this.showModalDialog(false);\r\n  }\r\n\r\n  public deleteColumn(index: number) {\r\n    this.columns.splice(index, 1);\r\n  }\r\n\r\n  public save() {\r\n    // this.columns.push({\r\n    //   label: 'Completed',\r\n    //   name: 'Completed',\r\n    //   default: false\r\n    // });\r\n    this.adminData.updateConfig(this.columns)\r\n      .pipe(\r\n        takeUntil(\r\n          this.ngUnsubscribe\r\n        )\r\n      )\r\n      .subscribe({\r\n        next: resp => {\r\n          this.columns = resp.column.map(\r\n            col => col = {\r\n              name: col.name,\r\n              label: col.label,\r\n              default: col.default,\r\n            }\r\n          );\r\n        },\r\n        error: err => {\r\n          console.log(err);\r\n        }\r\n      });\r\n  }\r\n\r\n  public confirm() {\r\n    const currentValue = this.columNameForm.get('addNewColumn').value;\r\n    if (this.selectedItemIndex !== null) {\r\n      // edit case\r\n      this.columns[this.selectedItemIndex].label = currentValue;\r\n      this.columns[this.selectedItemIndex].name = this.changeWhitespace(currentValue);\r\n    } else {\r\n      // new case\r\n      this.columns.unshift({\r\n        label: currentValue,\r\n        name: this.changeWhitespace(currentValue),\r\n        default: false\r\n      });\r\n    }\r\n    this.selectedItemIndex = null;\r\n    this.closeModal();\r\n  }\r\n\r\n  public closeModal() {\r\n    this.displayModal = false;\r\n  }\r\n\r\n  private changeWhitespace(str: string): string {\r\n    return str?.replace(/ /g, '_');\r\n  }\r\n}\r\n","<div class=\"content\">\r\n    <div cdkDropList class=\"example-list\" (cdkDropListDropped)=\"drop($event)\">\r\n        <div class=\"example-box columns\" *ngFor=\"let col of columns let i = index\"\r\n            [class.completed]=\"col.label === 'Completed'\" cdkDrag [cdkDragDisabled]=\"col.label === 'Completed'\">\r\n            <h5 class=\"columnName\">{{col.label}}</h5>\r\n            <div class=\"buttonsForColumn\" *ngIf=\"col.label !== 'Completed'\">\r\n                <button (click)=\"edit(i)\" type=\"button\" class=\"editButton\" pTooltip=\"Edit\" tooltipPosition=\"top\">\r\n                    <i class=\"fa fa-pencil fa-lg\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                <button (click)=\"deleteColumn(i)\" class=\"clearButton\" type=\"button\" pTooltip=\"Delete\"\r\n                    tooltipPosition=\"top\">\r\n                    <i class=\"fa fa-trash-o fa-lg\" aria-hidden=\"true\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"buttons\">\r\n            <div class=\"addButton\">\r\n                <p-button class=\"pButton\" (click)=\"showModalDialog(true)\" label=\"Add new\"></p-button>\r\n                <p-dialog header=\"Create new ticket\" [position]=\"'topleft'\" [(visible)]=\"displayModal\" [modal]=\"true\"\r\n                    [style]=\"{width: '30vw'}\" [baseZIndex]=\"10000\" [draggable]=\"false\" [resizable]=\"false\">\r\n                    <div [formGroup]=\"columNameForm\">\r\n                        <input formControlName=\"addNewColumn\" type=\"text\" size=\"20\" placeholder=\"Column Name\"\r\n                            pInputText>\r\n                    </div>\r\n                    <p-footer>\r\n                        <p-button type=\"submit\" icon=\"pi pi-check\" (click)=\"confirm()\" label=\"Yes\" class=\"p-button-text\"\r\n                            [disabled]=\"columNameForm.invalid\"></p-button> <!--  doesNotWork -->\r\n                        <p-button icon=\"pi pi-times\" (click)=\"closeModal()\" label=\"No\"></p-button>\r\n                    </p-footer>\r\n                </p-dialog>\r\n            </div>\r\n            <button pButton (click)=\"save()\" type=\"button\" label=\"Save\" class=\"ui-button-success saveButton\"></button>\r\n        </div>\r\n    </div>\r\n</div>","export * from './ticket-form.component';\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { ITicketDescription } from 'src/app/core/infrastructure/interfaces';\r\nimport { AdminDataService } from '../../services';\r\n\r\n@Component({\r\n  selector: 'app-ticket-form',\r\n  templateUrl: './ticket-form.component.html',\r\n  styleUrls: ['./ticket-form.component.scss']\r\n})\r\nexport class TicketFormComponent implements OnInit, OnDestroy {\r\n\r\n  public ticketForm: FormGroup;\r\n  public dropdownItems: FormArray;\r\n  public ticketTypeOptions: SelectItem[];\r\n  public tickets: ITicketDescription[];\r\n  private ngUnsubscribe = new Subject();\r\n\r\n  constructor(\r\n    private bulider: FormBuilder,\r\n    private adminData: AdminDataService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formInit();\r\n    this.getTickets();\r\n    this.ticketTypeOptions = [\r\n      {\r\n        label: 'Text',\r\n        value: 'text'\r\n      },\r\n      {\r\n        label: 'Dropdown',\r\n        value: 'dropdown'\r\n      },\r\n    ];\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.ngUnsubscribe.next();\r\n    this.ngUnsubscribe.unsubscribe();\r\n  }\r\n\r\n  private getTickets() {\r\n    this.adminData.getTickets()\r\n      .pipe(\r\n        takeUntil(this.ngUnsubscribe)\r\n      )\r\n      .subscribe({\r\n        next: resp => {\r\n          this.tickets = (resp || []).map(this.getTicket);\r\n        },\r\n        error: err => {\r\n          console.log(err);\r\n        }\r\n      });\r\n  }\r\n\r\n  private getTicket(ticket): ITicketDescription {\r\n    if (ticket.dropdownItems) {\r\n      return {\r\n        label: ticket.label,\r\n        name: ticket.name,\r\n        type: ticket.type\r\n      };\r\n    } else {\r\n      return {\r\n        label: ticket.label,\r\n        name: ticket.name,\r\n        type: ticket.type,\r\n        dropdownItems: ticket.dropdownItems\r\n      };\r\n    }\r\n  }\r\n\r\n  public Submit() {\r\n    this.ticketForm.get('ticketType').reset();\r\n    this.ticketForm.get('ticketName').reset();\r\n    this.adminData.updateTicket(this.tickets)\r\n      .pipe(\r\n        takeUntil(this.ngUnsubscribe)\r\n      )\r\n      .subscribe({\r\n        next: resp => {\r\n          this.tickets = resp.ticket.map(this.getTicket);\r\n        },\r\n        error: err => {\r\n          console.log(err);\r\n        }\r\n      });\r\n  }\r\n\r\n  public addToList(): void {\r\n    const ticketType = this.ticketForm.get('ticketType').value;\r\n    const ticketName = this.ticketForm.get('ticketName').value;\r\n    const dropdownItems = this.ticketForm.get('dropdownItems').value;\r\n    this.ticketForm.get('ticketType').reset();\r\n    this.ticketForm.get('ticketName').reset();\r\n    const ticket: ITicketDescription = {\r\n      label: ticketName,\r\n      name: this.changeWhitespace(ticketName),\r\n      type: ticketType\r\n    };\r\n    if (ticketType === 'dropdown') {\r\n      ticket.dropdownItems = dropdownItems.map(\r\n        item => {\r\n          return {\r\n            label: item,\r\n            value: this.changeWhitespace(item)\r\n          };\r\n        }\r\n      );\r\n      console.log(ticket.dropdownItems);\r\n    }\r\n    this.tickets.push(ticket);\r\n    console.log(this.tickets);\r\n  }\r\n\r\n  public deleteItem(itemIndex): void {\r\n    this.dropDownItems.removeAt(itemIndex);\r\n  }\r\n\r\n  public addItem(): void {\r\n    this.dropDownItems.push(this.createItem());\r\n  }\r\n\r\n  private createItem(): FormControl {\r\n    return this.bulider.control('');\r\n  }\r\n\r\n  private get dropDownItems(): FormArray {\r\n    return this.ticketForm.get('dropdownItems') as FormArray;\r\n  }\r\n\r\n  private formInit(): void {\r\n    this.ticketForm = this.bulider.group({\r\n      ticketName: ['', Validators.required],\r\n      ticketType: ['', Validators.required],\r\n      dropdownItems: this.bulider.array([])\r\n    });\r\n    const ticketType = this.ticketForm.get('ticketType');\r\n    const dropdownItems = this.ticketForm.get('dropdownItems');\r\n    ticketType\r\n      .valueChanges\r\n      .pipe(\r\n        takeUntil(this.ngUnsubscribe)\r\n      )\r\n      .subscribe(() => {\r\n        if (ticketType.value === 'dropdown' && !dropdownItems.value.length) {\r\n          this.addItem();\r\n        }\r\n      });\r\n  }\r\n\r\n  private changeWhitespace(str: string): string {\r\n    return str?.replace(/ /g, '_');\r\n  }\r\n}\r\n","<div class=\"content\">\r\n    <div class=\"ticketLabelContainer\">\r\n        <div *ngFor=\"let ticket of tickets\" class=\"ticketLabel\">\r\n            <h5 class=\"forTicketLabel\">{{ticket.label}}</h5>\r\n            <div class=\"dropdownIcon\" *ngIf=\"ticket.type==='dropdown'\">\r\n                <i class=\"fa fa-sort-desc fa-lg\" aria-hidden=\"true\"></i>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"ticketForm\" [formGroup]=\"ticketForm\">\r\n        <div class=\"ticketFormInputs\">\r\n            <div class=\"ticketNameAndType\">\r\n                <input class=\"ticketName\" formControlName=\"ticketName\" id=\"input\" type=\"text\" size=\"30\" pInputText\r\n                    placeholder=\"Name\">\r\n                <p-dropdown [options]=\"ticketTypeOptions\" formControlName=\"ticketType\" placeholder=\"Select a type\"\r\n                    [showClear]=\"true\">\r\n                </p-dropdown>\r\n            </div>\r\n        </div>\r\n        <div class=\"dropDown\" *ngIf=\"ticketForm.get('ticketType').value==='dropdown'\">\r\n            <div class=\"dropdownItems\" formArrayName=\"dropdownItems\">\r\n                <div *ngFor=\"let item of ticketForm.get('dropdownItems')['controls']; let i = index\">\r\n                    <div class=\"controlsAndButton\">\r\n                        <input [formControl]=\"item\" id=\"input\" type=\"text\" size=\"30\" pInputText\r\n                            placeholder=\"Dropdown Item Name\">\r\n                        <button [disabled]=\"ticketForm.get('dropdownItems').value.length < 2\" class=\"delete\" type=\"button\" (click)='deleteItem(i)'>\r\n                            <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button class=\"addItem\" (click)=\"addItem()\" pButton type=\"button\" label=\"Add Item\"\r\n                class=\"ui-button-raised ui-button-secondary\"></button>\r\n        </div>\r\n    </div>\r\n    <div class=\"save\">\r\n        <button class=\"submit\" (click)=\"Submit()\"\r\n            [disabled]=\"ticketForm.get('ticketName').invalid || ticketForm.get('ticketType').invalid\" pButton\r\n            type=\"button\" label=\"Submit\" class=\"ui-button-raised ui-button-success\"></button>\r\n        <button class=\"addToList\" (click)=\"addToList()\"\r\n            [disabled]=\"ticketForm.get('ticketName').invalid || ticketForm.get('ticketType').invalid\" pButton\r\n            type=\"button\" label=\"Add to list\" class=\"ui-button-raised ui-button-info\"></button>\r\n    </div>\r\n</div>","export * from './tickets.component';","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tickets',\r\n  templateUrl: './tickets.component.html',\r\n  styleUrls: ['./tickets.component.scss']\r\n})\r\nexport class TicketsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>tickets works!</p>\r\n"]}